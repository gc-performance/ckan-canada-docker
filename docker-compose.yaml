services:

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@gcperformance.ca"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    restart: unless-stopped

  ckan:
    container_name: ckan
    build: .
    depends_on:
      - postgres
      - solr
      - redis
      - datapusher
    environment:
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}

      CKAN_POSTGRES_DB: ${CKAN_POSTGRES_DB}
      CKAN_DATASTORE_POSTGRES_DB: ${CKAN_DATASTORE_POSTGRES_DB}
      CKAN_POSTGRES_USER: ${CKAN_POSTGRES_USER}
      CKAN_DATASTORE_POSTGRES_READ_USER: ${CKAN_DATASTORE_POSTGRES_READ_USER}
      CKAN_DATASTORE_POSTGRES_WRITE_USER: ${CKAN_DATASTORE_POSTGRES_WRITE_USER}
      CKAN_POSTGRES_PWD: ${CKAN_POSTGRES_PWD}
      CKAN_DATASTORE_POSTGRES_READ_PWD: ${CKAN_DATASTORE_POSTGRES_READ_PWD}
      CKAN_DATASTORE_POSTGRES_WRITE_PWD: ${CKAN_DATASTORE_POSTGRES_WRITE_PWD}

      CKAN_SQLALCHEMY_URL: ${CKAN_SQLALCHEMY_URL}
      CKAN_DATASTORE_WRITE_URL: ${CKAN_DATASTORE_WRITE_URL}
      CKAN_DATASTORE_READ_URL: ${CKAN_DATASTORE_READ_URL}
      CKAN_SOLR_URL: ${CKAN_SOLR_URL}
      CKAN_REDIS_URL: ${CKAN_REDIS_URL}

      CKAN_SITE_URL: ${CKAN_SITE_URL}

    ports:
      - "${CKAN_SITE_PORT}:5000"
    volumes:
      ["./service.yaml:/srv/app/src/ckanext-canada/ckanext/canada/tables/service.yaml"]

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ckan.rule=Host(`${CKAN_SITE_URL}`)"
      - "traefik.http.routers.ckan.entrypoints=websecure"
      - "traefik.http.routers.ckan.tls.certresolver=myresolver"
      - "traefik.http.services.ckan.loadbalancer.server.port=${CKAN_SITE_PORT}"

    restart: unless-stopped
    command: ./start.sh
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", CKAN_SITE_URL]

  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB'"]


  solr:
    container_name: solr
    image: opendatacanada/solr
    #image: ckan/ckan-solr:2.9-solr8
    volumes:
      - solr_data:/var/solr/data
    ports:
      - "8983:8983"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]


  redis:
    container_name: redis
    image: redis:6-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  datapusher:
    container_name: datapusher
    image: ckan/ckan-base-datapusher:0.0.19
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]

volumes:
  pg_data:
  solr_data:
